Cloud Identification - Everything is stored in Git 

Date Started:              July 4th, 2024
File path:                 C:\Users\Dallin\Documents\GitHub\cloud\
Current project folder:    l1r_11_updated_07032024
Current excel spreadsheet: cloud_intervals_112024_D
Current python file:       view_images_aug_6.py
Dallin's Task:             Even numbered orbits and modulo 15
Anh's Task:                Odd numbered orbits and modulo 15

Operational Notes:

- Run current project folder in view_images_h.py to generate usable images from Qline
- ID clouds and add start/end frames for each cloud into excel 
- Also add total frames for each orbit (last frame + 1)

Python Program Notes:

view_images.py - shows Qline image as well as radiance image.
view_images_h.py - shows Qline and frequency over radiance graph.
view_images_o.py - adaptation of h variant that allows us to just type in the orbit # instead of the entire file path.
view_images_h_s.py - Same as h variant, but has blue bars down middle for identifying when clouds cross certain pixels.
view_images_aug_6.py - Added lines dissecting the image into 3 section (high, middle, and low). Toggleable bars have also been added that cut the entire image into equal segments the width of the center lines and a third the height of the image.

Improvement Notes:

- Add lines that show vmin and vmax limits closer to the graph
- Could we figure out a way to set the vmin and vmax based off the standard deviation of the radiance so that it updates automatically with the change in radiance?

Log:

July 4th - Practiced on day 1 images that have already been searched. Moved on to images from l1r_11_updated_07032024 but it looks like there's an error importing netCDF. Error occurred in both o and h python models. Consult Anh.

July 9th - Had some issues getting the software running. Anh created a new python environment tf_env that the code needs to be run in, not the base model in Anaconda. Took me way too long to figure that out. Other than that it's been slow, but smooth sailing. Identifying clouds is getting substantially easier.

July 10th - Updated python program. We are now using the view_images_h_s.py variant. New datapoints added to excel denoting start/end frames for center column of the imager. I've structured the excel spreadsheet so the start/end frames for the center columns are grouped within the start/end frames for the entire cloud section. In other words, sometimes there are multiple distinct clouds that can be separated by the center line, but not by the edge of the image. So for each start/end section containing the whole image, I've used the center line to denote individual clouds when applicable. *Review this and make sure Anh is doing the same thing (try to reword). 

July 10th - Identified clouds in even orbits up to, and including, orbit 45. Sometimes there are small individual clouds that I skip with the center alignment tool, but I include in the wideframe. Ask Dominique if that's acceptable. Clarify the current method outlined in the July 10th log is the correct method and proceed.

July 15th - All modulo 15 orbits have been completed and all evens up to 60. There were two that had heavy interference from the solar panels so I marked them accordingly and skipped. I figure if we really need that data we can acquire it later.

July 31st - Edited some erroneous and missing datapoints from earlier orbits. Orbits up to 75 have all been completed. 

August 6th - Clouds from even orbits from 76 through 138 are logged. Orbits 112 and 114 are missing from the project folder. Next step is to use Dominique's model to group clouds horizontally into three regions, top, middle, and bottom. I will start that step next time.

August 7th - The new goal is to take the centered cloud data points we've gathered and split the data into 3 segments consisting of high, middle, and bottom. These are based on where the clouds enter and exit the center of the image with respect to the vertical axis. I've started with modulo 15 orbits from orbit 75 through 135. The other modulo 15 orbits will be prioritized and then even orbits will be filled in.

August 9th - All modulo 15 orbits are completed. I'm now filling in all the even orbits. My work since last week was presented in the team meeting. Yucheng would like me to show an example of how the clouds move next meeting (see work_notes.txt for more details) Starting Monday I will pick up where I left off. 

August 12th - Even orbits from 2 to 14 complete.

August 13th - Even orbits from 16 to 26 complete. Some of Senator (Traitor) Mike Lee's staff came by the office today. Ludger showed them around and explained what we're doing and how taxpayer money is being spent. That took awhile today so I wasn't able to complete as much as I liked given how long I was in the lab today.

August 14th - Worked from home, even orbits are complete from 28 to 44. I changed my local copy of view_images_aug_6.py to jump 20 frames when the up/down keyboard inputs are used. I'm not going to commit the change until I've had a chance to speak with Anh to see if he wants that featured added.